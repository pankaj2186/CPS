{"mappings":"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","sources":["packages/@react-aria/virtualizer/src/index.ts","packages/@react-aria/virtualizer/src/Virtualizer.tsx","packages/@react-aria/virtualizer/src/ScrollView.tsx","packages/@react-aria/virtualizer/src/utils.ts","packages/@react-aria/virtualizer/src/useHasTabbableChild.ts","packages/@react-aria/virtualizer/src/VirtualizerItem.tsx","packages/@react-aria/virtualizer/src/useVirtualizerItem.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport type {RTLOffsetType} from './utils';\nexport {useVirtualizer, Virtualizer} from './Virtualizer';\nexport {useVirtualizerItem} from './useVirtualizerItem';\nexport {VirtualizerItem, layoutInfoToStyle} from './VirtualizerItem';\nexport {ScrollView} from './ScrollView';\nexport {getRTLOffsetType, getScrollLeft, setScrollLeft} from './utils';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection} from '@react-types/shared';\nimport {focusWithoutScrolling, mergeProps, useLayoutEffect} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\nimport {Layout, Rect, ReusableView, useVirtualizerState, VirtualizerState} from '@react-stately/virtualizer';\nimport React, {FocusEvent, HTMLAttributes, Key, ReactElement, RefObject, useCallback, useEffect, useMemo, useRef} from 'react';\nimport {ScrollView} from './ScrollView';\nimport {useHasTabbableChild} from './useHasTabbableChild';\nimport {VirtualizerItem} from './VirtualizerItem';\n\ninterface VirtualizerProps<T extends object, V> extends HTMLAttributes<HTMLElement> {\n  children: (type: string, content: T) => V,\n  renderWrapper?: (\n    parent: ReusableView<T, V> | null,\n    reusableView: ReusableView<T, V>,\n    children: ReusableView<T, V>[],\n    renderChildren: (views: ReusableView<T, V>[]) => ReactElement[]\n  ) => ReactElement,\n  layout: Layout<T>,\n  collection: Collection<T>,\n  focusedKey?: Key,\n  sizeToFit?: 'width' | 'height',\n  scrollDirection?: 'horizontal' | 'vertical' | 'both',\n  transitionDuration?: number,\n  isLoading?: boolean,\n  onLoadMore?: () => void,\n  shouldUseVirtualFocus?: boolean,\n  scrollToItem?: (key: Key) => void\n}\n\nfunction Virtualizer<T extends object, V>(props: VirtualizerProps<T, V>, ref: RefObject<HTMLDivElement>) {\n  let {\n    children: renderView,\n    renderWrapper,\n    layout,\n    collection,\n    sizeToFit,\n    scrollDirection,\n    transitionDuration,\n    isLoading,\n    onLoadMore,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    focusedKey,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    shouldUseVirtualFocus,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    scrollToItem,\n    ...otherProps\n  } = props;\n\n  let fallbackRef = useRef<HTMLDivElement>();\n  ref = ref || fallbackRef;\n\n  let state = useVirtualizerState({\n    transitionDuration,\n    layout,\n    collection,\n    renderView,\n    renderWrapper: renderWrapper || defaultRenderWrapper,\n    onVisibleRectChange(rect) {\n      ref.current.scrollLeft = rect.x;\n      ref.current.scrollTop = rect.y;\n    }\n  });\n\n  let {virtualizerProps} = useVirtualizer(props, state, ref);\n\n  // Handle scrolling, and call onLoadMore when nearing the bottom.\n  let onVisibleRectChange = useCallback((rect: Rect) => {\n    state.setVisibleRect(rect);\n\n    if (!isLoading && onLoadMore) {\n      let scrollOffset = state.virtualizer.contentSize.height - rect.height * 2;\n      if (rect.y > scrollOffset) {\n        onLoadMore();\n      }\n    }\n  }, [isLoading, onLoadMore, state]);\n\n  useLayoutEffect(() => {\n    if (!isLoading && onLoadMore && !state.isAnimating) {\n      if (state.contentSize.height > 0 && state.contentSize.height <= state.virtualizer.visibleRect.height) {\n        onLoadMore();\n      }\n    }\n  }, [state.contentSize, state.isAnimating, state.virtualizer, onLoadMore, isLoading]);\n\n  return (\n    <ScrollView\n      {...mergeProps(otherProps, virtualizerProps)}\n      ref={ref}\n      innerStyle={state.isAnimating ? {transition: `none ${state.virtualizer.transitionDuration}ms`} : undefined}\n      contentSize={state.contentSize}\n      onVisibleRectChange={onVisibleRectChange}\n      onScrollStart={state.startScrolling}\n      onScrollEnd={state.endScrolling}\n      sizeToFit={sizeToFit}\n      scrollDirection={scrollDirection}>\n      {state.visibleViews}\n    </ScrollView>\n  );\n}\n\ninterface VirtualizerOptions {\n  focusedKey?: Key,\n  scrollToItem?: (key: Key) => void,\n  shouldUseVirtualFocus?: boolean\n}\n\nexport function useVirtualizer<T extends object, V, W>(props: VirtualizerOptions, state: VirtualizerState<T, V, W>, ref: RefObject<HTMLElement>) {\n  let {focusedKey, scrollToItem, shouldUseVirtualFocus} = props;\n  let {virtualizer} = state;\n\n  // Scroll to the focusedKey when it changes. Actually focusing the focusedKey\n  // is up to the implementation using Virtualizer since we don't have refs\n  // to all of the item DOM nodes.\n  let lastFocusedKey = useRef(null);\n  let isFocusWithin = useRef(false);\n  useEffect(() => {\n    if (virtualizer.visibleRect.height === 0) {\n      return;\n    }\n\n    // Only scroll the focusedKey into view if the modality is not pointer to avoid jumps in position when clicking/pressing tall items.\n    // Exception made if focus isn't within the virtualizer (e.g. opening a picker via click should scroll the selected item into view)\n    let modality = getInteractionModality();\n    if (focusedKey !== lastFocusedKey.current && (modality !== 'pointer' || !isFocusWithin.current)) {\n      if (scrollToItem) {\n        scrollToItem(focusedKey);\n      } else {\n        virtualizer.scrollToItem(focusedKey, {duration: 0});\n      }\n    }\n\n    lastFocusedKey.current = focusedKey;\n  }, [focusedKey, virtualizer.visibleRect.height, virtualizer, lastFocusedKey, scrollToItem]);\n\n  // Persist the focusedKey and prevent it from being removed from the DOM when scrolled out of view.\n  virtualizer.persistedKeys = useMemo(() => focusedKey ? new Set([focusedKey]) : new Set(), [focusedKey]);\n\n  let onFocus = useCallback((e: FocusEvent) => {\n    // If the focused item is scrolled out of view and is not in the DOM, the collection\n    // will have tabIndex={0}. When tabbing in from outside, scroll the focused item into view.\n    // Ignore focus events that bubble through portals (e.g. focus that happens on a menu popover child of the virtualizer)\n    // Don't scroll focused key into view if modality is pointer to prevent sudden jump in position (e.g. CardView).\n    let modality = getInteractionModality();\n    if (!isFocusWithin.current && ref.current.contains(e.target) && modality !== 'pointer') {\n      if (scrollToItem) {\n        scrollToItem(focusedKey);\n      } else {\n        virtualizer.scrollToItem(focusedKey, {duration: 0});\n      }\n    }\n\n    isFocusWithin.current = e.target !== ref.current;\n  }, [ref, virtualizer, focusedKey, scrollToItem]);\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    isFocusWithin.current = ref.current.contains(e.relatedTarget as Element);\n  }, [ref]);\n\n  // When the focused item is scrolled out of view and is removed from the DOM,\n  // move focus to the collection view as a whole if focus was within before.\n  let focusedView = virtualizer.getView(focusedKey);\n  useEffect(() => {\n    if (focusedKey && !focusedView && isFocusWithin.current && document.activeElement !== ref.current) {\n      focusWithoutScrolling(ref.current);\n    }\n  });\n\n  let hasTabbableChild = useHasTabbableChild({\n    isEmpty: virtualizer.collection.size === 0,\n    hasRenderedAnything: virtualizer.contentSize.height > 0 || virtualizer.contentSize.width > 0\n  }, ref);\n\n  // Set tabIndex to -1 if the focused view is in the DOM, otherwise 0 so that the collection\n  // itself is tabbable. When the collection receives focus, we scroll the focused item back into\n  // view, which will allow it to be properly focused. If using virtual focus, don't set a\n  // tabIndex at all so that VoiceOver on iOS 14 doesn't try to move real DOM focus to the element anyway.\n  let tabIndex: number;\n  if (!shouldUseVirtualFocus) {\n    // When there is no focusedView the default tabIndex is 0. We include logic for empty collections too.\n    // For collections that are empty, but have a link in the empty children we want to skip focusing this\n    // and let focus move to the link similar to link moving to children.\n    tabIndex = focusedView || hasTabbableChild ? -1 : 0;\n  }\n\n  return {\n    virtualizerProps: {\n      tabIndex,\n      onFocus,\n      onBlur\n    }\n  };\n}\n\n// forwardRef doesn't support generic parameters, so cast the result to the correct type\n// https://stackoverflow.com/questions/58469229/react-with-typescript-generics-while-using-react-forwardref\nconst _Virtualizer = React.forwardRef(Virtualizer) as <T extends object, V>(props: VirtualizerProps<T, V> & {ref?: RefObject<HTMLDivElement>}) => ReactElement;\nexport {_Virtualizer as Virtualizer};\n\nfunction defaultRenderWrapper<T extends object, V>(\n  parent: ReusableView<T, V> | null,\n  reusableView: ReusableView<T, V>\n) {\n  return (\n    <VirtualizerItem\n      key={reusableView.key}\n      reusableView={reusableView}\n      parent={parent} />\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// @ts-ignore\nimport {flushSync} from 'react-dom';\nimport {getScrollLeft} from './utils';\nimport React, {\n  CSSProperties,\n  HTMLAttributes,\n  ReactNode,\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport {Rect, Size} from '@react-stately/virtualizer';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {useLocale} from '@react-aria/i18n';\nimport {useResizeObserver} from '@react-aria/utils';\n\ninterface ScrollViewProps extends HTMLAttributes<HTMLElement> {\n  contentSize: Size,\n  onVisibleRectChange: (rect: Rect) => void,\n  children: ReactNode,\n  innerStyle?: CSSProperties,\n  sizeToFit?: 'width' | 'height',\n  onScrollStart?: () => void,\n  onScrollEnd?: () => void,\n  scrollDirection?: 'horizontal' | 'vertical' | 'both'\n}\n\nfunction ScrollView(props: ScrollViewProps, ref: RefObject<HTMLDivElement>) {\n  let {\n    contentSize,\n    onVisibleRectChange,\n    children,\n    innerStyle,\n    sizeToFit,\n    onScrollStart,\n    onScrollEnd,\n    scrollDirection = 'both',\n    ...otherProps\n  } = props;\n\n  let defaultRef = useRef();\n  ref = ref || defaultRef;\n  let state = useRef({\n    scrollTop: 0,\n    scrollLeft: 0,\n    scrollEndTime: 0,\n    scrollTimeout: null,\n    width: 0,\n    height: 0,\n    isScrolling: false\n  }).current;\n  let {direction} = useLocale();\n\n  let [isScrolling, setScrolling] = useState(false);\n  let onScroll = useCallback((e) => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    if (props.onScroll) {\n      props.onScroll(e);\n    }\n\n    flushSync(() => {\n      let scrollTop = e.currentTarget.scrollTop;\n      let scrollLeft = getScrollLeft(e.currentTarget, direction);\n\n      // Prevent rubber band scrolling from shaking when scrolling out of bounds\n      state.scrollTop = Math.max(0, Math.min(scrollTop, contentSize.height - state.height));\n      state.scrollLeft = Math.max(0, Math.min(scrollLeft, contentSize.width - state.width));\n\n      onVisibleRectChange(new Rect(state.scrollLeft, state.scrollTop, state.width, state.height));\n\n      if (!state.isScrolling) {\n        state.isScrolling = true;\n        setScrolling(true);\n\n        if (onScrollStart) {\n          onScrollStart();\n        }\n      }\n\n      // So we don't constantly call clearTimeout and setTimeout,\n      // keep track of the current timeout time and only reschedule\n      // the timer when it is getting close.\n      let now = Date.now();\n      if (state.scrollEndTime <= now + 50) {\n        state.scrollEndTime = now + 300;\n\n        clearTimeout(state.scrollTimeout);\n        state.scrollTimeout = setTimeout(() => {\n          state.isScrolling = false;\n          setScrolling(false);\n          state.scrollTimeout = null;\n\n          if (onScrollEnd) {\n            onScrollEnd();\n          }\n        }, 300);\n      }\n    });\n  }, [props, direction, state, contentSize, onVisibleRectChange, onScrollStart, onScrollEnd]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      clearTimeout(state.scrollTimeout);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let updateSize = useCallback(() => {\n    let dom = ref.current;\n    if (!dom) {\n      return;\n    }\n\n    let w = dom.clientWidth;\n    let h = dom.clientHeight;\n    if (sizeToFit && contentSize.width > 0 && contentSize.height > 0) {\n      if (sizeToFit === 'width') {\n        w = Math.min(w, contentSize.width);\n      } else if (sizeToFit === 'height') {\n        h = Math.min(h, contentSize.height);\n      }\n    }\n\n    if (state.width !== w || state.height !== h) {\n      state.width = w;\n      state.height = h;\n      onVisibleRectChange(new Rect(state.scrollLeft, state.scrollTop, w, h));\n    }\n  }, [onVisibleRectChange, ref, state, sizeToFit, contentSize]);\n\n  useLayoutEffect(() => {\n    updateSize();\n  }, [updateSize]);\n  useResizeObserver({ref, onResize: updateSize});\n\n  let style: React.CSSProperties = {\n    // Reset padding so that relative positioning works correctly. Padding will be done in JS layout.\n    padding: 0,\n    ...otherProps.style\n  };\n\n  if (scrollDirection === 'horizontal') {\n    style.overflowX = 'auto';\n    style.overflowY = 'hidden';\n  } else if (scrollDirection === 'vertical') {\n    style.overflowY = 'auto';\n    style.overflowX = 'hidden';\n  } else {\n    style.overflow = 'auto';\n  }\n\n  return (\n    <div {...otherProps} style={style} ref={ref} onScroll={onScroll}>\n      <div role=\"presentation\" style={{width: contentSize.width, height: contentSize.height, pointerEvents: isScrolling ? 'none' : 'auto', position: 'relative', ...innerStyle}}>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nconst ScrollViewForwardRef = React.forwardRef(ScrollView);\nexport {ScrollViewForwardRef as ScrollView};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n\n// Original licensing for the following methods can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/bvaughn/react-window/blob/master/src/createGridComponent.js\n\n// According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nexport function getScrollLeft(node: Element, direction: Direction): number {\n  let {scrollLeft} = node;\n\n  // scrollLeft in rtl locales differs across browsers, so normalize.\n  // See comment by getRTLOffsetType below for details.\n  if (direction === 'rtl') {\n    let {scrollWidth, clientWidth} = node;\n    switch (getRTLOffsetType()) {\n      case 'negative':\n        scrollLeft = -scrollLeft;\n        break;\n      case 'positive-descending':\n        scrollLeft = scrollWidth - clientWidth - scrollLeft;\n        break;\n    }\n  }\n\n  return scrollLeft;\n}\n\nexport function setScrollLeft(node: Element, direction: Direction, scrollLeft: number) {\n  if (direction === 'rtl') {\n    switch (getRTLOffsetType()) {\n      case 'negative':\n        scrollLeft = -scrollLeft;\n        break;\n      case 'positive-ascending':\n        break;\n      default: {\n        const {clientWidth, scrollWidth} = node;\n        scrollLeft = scrollWidth - clientWidth - scrollLeft;\n        break;\n      }\n    }\n  }\n\n  node.scrollLeft = scrollLeft;\n}\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getFocusableTreeWalker} from '@react-aria/focus';\nimport {RefObject, useEffect, useState} from 'react';\n\ninterface AriaHasTabbableChildProps {\n  isEmpty: boolean,\n  hasRenderedAnything: boolean\n}\n\n// This was created for a special empty case of a component that can have child or\n// be empty, like Collection/Virtualizer/Table/ListView/etc. When these components\n// are empty they can have a message with a tabbable element, which is like them\n// being not empty, when it comes to focus and tab order.\n//\n// This looks at the element's children and determines if any are tabbable.\nexport function useHasTabbableChild({isEmpty, hasRenderedAnything}: AriaHasTabbableChildProps, ref: RefObject<HTMLElement>): boolean {\n  let [hasTabbableChild, setHasTabbableChild] = useState(false);\n\n  useEffect(() => {\n    if (ref?.current && isEmpty && hasRenderedAnything) {\n      // Detect if there are any tabbable elements and update the tabIndex accordingly.\n      let walker = getFocusableTreeWalker(ref.current, {tabbable: true});\n      setHasTabbableChild(!!walker.nextNode());\n    }\n  }, [ref, isEmpty, hasRenderedAnything]);\n\n  return hasTabbableChild;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\nimport {LayoutInfo, ReusableView} from '@react-stately/virtualizer';\nimport React, {CSSProperties, useRef} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {useVirtualizerItem} from './useVirtualizerItem';\n\ninterface VirtualizerItemProps<T extends object, V> {\n  reusableView: ReusableView<T, V>,\n  parent?: ReusableView<T, V>,\n  className?: string\n}\n\nexport function VirtualizerItem<T extends object, V>(props: VirtualizerItemProps<T, V>) {\n  let {className, reusableView, parent} = props;\n  let {direction} = useLocale();\n  let ref = useRef();\n  useVirtualizerItem({\n    reusableView,\n    ref\n  });\n\n  return (\n    <div role=\"presentation\" ref={ref} className={className} style={layoutInfoToStyle(reusableView.layoutInfo, direction, parent && parent.layoutInfo)}>\n      {reusableView.rendered}\n    </div>\n  );\n}\n\nlet cache = new WeakMap();\nexport function layoutInfoToStyle(layoutInfo: LayoutInfo, dir: Direction, parent?: LayoutInfo | null): CSSProperties {\n  let xProperty = dir === 'rtl' ? 'right' : 'left';\n  let cached = cache.get(layoutInfo);\n  if (cached && cached[xProperty] != null) {\n    if (!parent) {\n      return cached;\n    }\n\n    // Invalidate if the parent position changed.\n    let top = layoutInfo.rect.y - parent.rect.y;\n    let x = layoutInfo.rect.x - parent.rect.x;\n    if (cached.top === top && cached[xProperty] === x) {\n      return cached;\n    }\n  }\n\n  let style: CSSProperties = {\n    position: layoutInfo.isSticky ? 'sticky' : 'absolute',\n    overflow: layoutInfo.allowOverflow ? 'visible' : 'hidden',\n    top: layoutInfo.rect.y - (parent ? parent.rect.y : 0),\n    [xProperty]: layoutInfo.rect.x - (parent ? parent.rect.x : 0),\n    transition: 'all',\n    WebkitTransition: 'all',\n    WebkitTransitionDuration: 'inherit',\n    transitionDuration: 'inherit',\n    width: layoutInfo.rect.width,\n    height: layoutInfo.rect.height,\n    opacity: layoutInfo.opacity,\n    zIndex: layoutInfo.zIndex,\n    transform: layoutInfo.transform,\n    contain: 'size layout style'\n  };\n\n  cache.set(layoutInfo, style);\n  return style;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback} from 'react';\nimport {ReusableView, Size} from '@react-stately/virtualizer';\nimport {useLayoutEffect} from '@react-aria/utils';\n\ninterface VirtualizerItemOptions<T extends object, V> {\n  reusableView: ReusableView<T, V>,\n  ref: RefObject<HTMLElement>\n}\n\nexport function useVirtualizerItem<T extends object, V>(options: VirtualizerItemOptions<T, V>) {\n  let {reusableView: {layoutInfo, virtualizer}, ref} = options;\n\n  let updateSize = useCallback(() => {\n    let size = getSize(ref.current);\n    virtualizer.updateItemSize(layoutInfo.key, size);\n  }, [virtualizer, layoutInfo.key, ref]);\n\n  useLayoutEffect(() => {\n    if (layoutInfo.estimatedSize) {\n      updateSize();\n    }\n  });\n\n  return {updateSize};\n}\n\nfunction getSize(node: HTMLElement) {\n  // Reset height before measuring so we get the intrinsic size\n  let height = node.style.height;\n  node.style.height = '';\n  let size = new Size(node.scrollWidth, node.scrollHeight);\n  node.style.height = height;\n  return size;\n}\n"],"names":[],"version":3,"file":"main.js.map"}