import Field from './Field.js';
declare class Checkbox extends Field {
    private offValue;
    _getConstraintObject(): {
        enum: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        accept: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        exclusiveMinimum: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        exclusiveMaximum: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        format: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        maxFileSize: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        maxLength: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        maximum: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        maxItems: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        minLength: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        minimum: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        minItems: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        pattern: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        required: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        type: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
        uniqueItems: (constraint: any, inputVal: any) => {
            valid: boolean;
            value: any;
        };
    };
    protected _getDefaults(): {
        enforceEnum: boolean;
        readOnly: boolean;
        enabled: boolean;
        visible: boolean;
        type: string | undefined;
    };
    get enum(): any[];
}
export default Checkbox;
