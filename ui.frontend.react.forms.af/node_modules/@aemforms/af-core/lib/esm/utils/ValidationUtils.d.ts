type ValidationResult = {
    valid: boolean;
    value: any;
};
export declare const coerceType: (param: any, type: 'string' | 'number' | 'boolean') => string | number | boolean;
type ValidConstraintsType = {
    date: ValidationConstraints[];
    string: ValidationConstraints[];
    number: ValidationConstraints[];
    array: ValidationConstraints[];
    file: ValidationConstraints[];
};
export declare const ValidConstraints: ValidConstraintsType;
export type ValidationConstraints = 'type' | 'format' | 'minimum' | 'maximum' | 'exclusiveMinimum' | 'exclusiveMaximum' | 'minItems' | 'maxItems' | 'uniqueItems' | 'minLength' | 'maxLength' | 'pattern' | 'required' | 'enum' | 'accept' | 'maxFileSize';
type ConstraintsObject = {
    [key in ValidationConstraints]: (constraint: any, inputVal: any) => ValidationResult;
};
export declare const Constraints: ConstraintsObject;
export {};
