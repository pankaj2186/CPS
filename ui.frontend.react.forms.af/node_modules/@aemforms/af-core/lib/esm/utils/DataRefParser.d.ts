import DataGroup from '../data/DataGroup.js';
import DataValue from '../data/DataValue.js';
type TokenType = string;
export declare const TOK_GLOBAL: TokenType;
export type Token = {
    type: TokenType;
    value: string | number;
    start: number;
};
export declare const identifier: (value: string, start: number) => {
    type: string;
    value: string;
    start: number;
};
export declare const bracket: (value: number, start: number) => {
    type: string;
    value: number;
    start: number;
};
export declare const global$: () => {
    type: string;
    start: number;
    value: string;
};
export declare const tokenize: (stream: string) => Token[];
export declare const resolveData: <T extends DataValue>(data: DataGroup, input: Token[] | string, create?: T | undefined) => DataGroup | DataValue | undefined;
export {};
