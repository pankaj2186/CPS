"use strict";
/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
* Copyright 2022 Adobe
* All Rights Reserved.
*
* NOTICE: All information contained herein is, and remains
* the property of Adobe and its suppliers, if any. The intellectual
* and technical concepts contained herein are proprietary to Adobe
* and its suppliers and are protected by all applicable intellectual
* property laws, including trade secret and copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe.

* Adobe permits you to use and modify this file solely in accordance with
* the terms of the Adobe license agreement accompanying it.
*************************************************************************/
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_spectrum_1 = require("@adobe/react-spectrum");
const SpectrumMappers_1 = require("../utils/SpectrumMappers");
const af_react_renderer_1 = require("@aemforms/af-react-renderer");
const Date_1 = __importDefault(require("./Date"));
const mapper = (0, SpectrumMappers_1.combineConvertors)(SpectrumMappers_1.baseConvertor, SpectrumMappers_1.fieldConvertor, SpectrumMappers_1.constraintConvertor, SpectrumMappers_1.stringConstraintConvertor, (a) => {
    return {
        value: ((a.editFormat || a.displayFormat) ? a.isInFocus ? a.editValue : a.displayValue : a.value) || '',
        width: '100%'
    };
});
const TextFieldComponent = function (props) {
    if (props.format === 'date') {
        return (0, Date_1.default)(props);
    }
    else {
        const component = props[':type'] === 'multiline-input' ? react_spectrum_1.TextArea : react_spectrum_1.TextField;
        const renderedComponent = (0, af_react_renderer_1.useRenderer)(props, component, mapper, true);
        return renderedComponent;
    }
};
exports.default = TextFieldComponent;
