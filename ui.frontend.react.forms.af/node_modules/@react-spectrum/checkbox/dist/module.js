import "./main.css";
import $gpy1V$spectrumiconsuiCheckmarkSmall from "@spectrum-icons/ui/CheckmarkSmall";
import {useStyleProps as $gpy1V$useStyleProps, useFocusableRef as $gpy1V$useFocusableRef, classNames as $gpy1V$classNames, useDOMRef as $gpy1V$useDOMRef} from "@react-spectrum/utils";
import $gpy1V$spectrumiconsuiDashSmall from "@spectrum-icons/ui/DashSmall";
import {FocusRing as $gpy1V$FocusRing} from "@react-aria/focus";
import $gpy1V$react, {useRef as $gpy1V$useRef, useContext as $gpy1V$useContext, forwardRef as $gpy1V$forwardRef} from "react";
import {useCheckboxGroupItem as $gpy1V$useCheckboxGroupItem, useCheckbox as $gpy1V$useCheckbox, useCheckboxGroup as $gpy1V$useCheckboxGroup} from "@react-aria/checkbox";
import {useHover as $gpy1V$useHover} from "@react-aria/interactions";
import {useProviderProps as $gpy1V$useProviderProps, Provider as $gpy1V$Provider} from "@react-spectrum/provider";
import {useToggleState as $gpy1V$useToggleState} from "@react-stately/toggle";
import {Field as $gpy1V$Field} from "@react-spectrum/label";
import {useCheckboxGroupState as $gpy1V$useCheckboxGroupState} from "@react-stately/checkbox";
import {useFormProps as $gpy1V$useFormProps} from "@react-spectrum/form";

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ /// <reference types="css-module-types" />
/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ /*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 
const $8c8ab388b155237e$export$baf37c4be89255b8 = (0, $gpy1V$react).createContext(null);







var $fe1a56c62936037c$exports = {};

$parcel$export($fe1a56c62936037c$exports, "spectrum-Checkbox", () => $fe1a56c62936037c$export$f8ee3e99d637ccac, (v) => $fe1a56c62936037c$export$f8ee3e99d637ccac = v);
$parcel$export($fe1a56c62936037c$exports, "spectrum-Checkbox-input", () => $fe1a56c62936037c$export$fbf255e91152b086, (v) => $fe1a56c62936037c$export$fbf255e91152b086 = v);
$parcel$export($fe1a56c62936037c$exports, "focus-ring", () => $fe1a56c62936037c$export$f39a09f249340e2a, (v) => $fe1a56c62936037c$export$f39a09f249340e2a = v);
$parcel$export($fe1a56c62936037c$exports, "spectrum-Checkbox-box", () => $fe1a56c62936037c$export$b07bd551df410935, (v) => $fe1a56c62936037c$export$b07bd551df410935 = v);
$parcel$export($fe1a56c62936037c$exports, "is-indeterminate", () => $fe1a56c62936037c$export$682c8615600f6ee, (v) => $fe1a56c62936037c$export$682c8615600f6ee = v);
$parcel$export($fe1a56c62936037c$exports, "spectrum-Checkbox-checkmark", () => $fe1a56c62936037c$export$e152b25f70350d85, (v) => $fe1a56c62936037c$export$e152b25f70350d85 = v);
$parcel$export($fe1a56c62936037c$exports, "spectrum-Checkbox-partialCheckmark", () => $fe1a56c62936037c$export$7f6ea68ad4b1fa69, (v) => $fe1a56c62936037c$export$7f6ea68ad4b1fa69 = v);
$parcel$export($fe1a56c62936037c$exports, "is-checked", () => $fe1a56c62936037c$export$3f46c891456641e7, (v) => $fe1a56c62936037c$export$3f46c891456641e7 = v);
$parcel$export($fe1a56c62936037c$exports, "spectrum-Checkbox-label", () => $fe1a56c62936037c$export$9244b14cfa532d4f, (v) => $fe1a56c62936037c$export$9244b14cfa532d4f = v);
$parcel$export($fe1a56c62936037c$exports, "is-hovered", () => $fe1a56c62936037c$export$b8813cd5d7824ce7, (v) => $fe1a56c62936037c$export$b8813cd5d7824ce7 = v);
$parcel$export($fe1a56c62936037c$exports, "spectrum-Checkbox--quiet", () => $fe1a56c62936037c$export$3a2eb50fe5450439, (v) => $fe1a56c62936037c$export$3a2eb50fe5450439 = v);
$parcel$export($fe1a56c62936037c$exports, "is-invalid", () => $fe1a56c62936037c$export$14a30de2866685fa, (v) => $fe1a56c62936037c$export$14a30de2866685fa = v);
$parcel$export($fe1a56c62936037c$exports, "is-disabled", () => $fe1a56c62936037c$export$d35bc1e505d1ebbf, (v) => $fe1a56c62936037c$export$d35bc1e505d1ebbf = v);
var $fe1a56c62936037c$export$f8ee3e99d637ccac;
var $fe1a56c62936037c$export$fbf255e91152b086;
var $fe1a56c62936037c$export$f39a09f249340e2a;
var $fe1a56c62936037c$export$b07bd551df410935;
var $fe1a56c62936037c$export$682c8615600f6ee;
var $fe1a56c62936037c$export$e152b25f70350d85;
var $fe1a56c62936037c$export$7f6ea68ad4b1fa69;
var $fe1a56c62936037c$export$3f46c891456641e7;
var $fe1a56c62936037c$export$9244b14cfa532d4f;
var $fe1a56c62936037c$export$b8813cd5d7824ce7;
var $fe1a56c62936037c$export$3a2eb50fe5450439;
var $fe1a56c62936037c$export$14a30de2866685fa;
var $fe1a56c62936037c$export$d35bc1e505d1ebbf;
$fe1a56c62936037c$export$f8ee3e99d637ccac = "spectrum-Checkbox_4870fc";
$fe1a56c62936037c$export$fbf255e91152b086 = "spectrum-Checkbox-input_4870fc";
$fe1a56c62936037c$export$f39a09f249340e2a = "focus-ring_4870fc";
$fe1a56c62936037c$export$b07bd551df410935 = "spectrum-Checkbox-box_4870fc";
$fe1a56c62936037c$export$682c8615600f6ee = "is-indeterminate_4870fc";
$fe1a56c62936037c$export$e152b25f70350d85 = "spectrum-Checkbox-checkmark_4870fc";
$fe1a56c62936037c$export$7f6ea68ad4b1fa69 = "spectrum-Checkbox-partialCheckmark_4870fc";
$fe1a56c62936037c$export$3f46c891456641e7 = "is-checked_4870fc";
$fe1a56c62936037c$export$9244b14cfa532d4f = "spectrum-Checkbox-label_4870fc";
$fe1a56c62936037c$export$b8813cd5d7824ce7 = "is-hovered_4870fc";
$fe1a56c62936037c$export$3a2eb50fe5450439 = "spectrum-Checkbox--quiet_4870fc";
$fe1a56c62936037c$export$14a30de2866685fa = "is-invalid_4870fc";
$fe1a56c62936037c$export$d35bc1e505d1ebbf = "is-disabled_4870fc";






function $25b6292d81af2844$var$Checkbox(props, ref) {
    let originalProps = props;
    props = (0, $gpy1V$useProviderProps)(props);
    let { isIndeterminate: isIndeterminate = false , isEmphasized: isEmphasized = false , isDisabled: isDisabled = false , autoFocus: autoFocus , children: children , validationState: validationState , ...otherProps } = props;
    let { styleProps: styleProps  } = (0, $gpy1V$useStyleProps)(otherProps);
    let { hoverProps: hoverProps , isHovered: isHovered  } = (0, $gpy1V$useHover)({
        isDisabled: isDisabled
    });
    let inputRef = (0, $gpy1V$useRef)(null);
    let domRef = (0, $gpy1V$useFocusableRef)(ref, inputRef);
    // Swap hooks depending on whether this checkbox is inside a CheckboxGroup.
    // This is a bit unorthodox. Typically, hooks cannot be called in a conditional,
    // but since the checkbox won't move in and out of a group, it should be safe.
    let groupState = (0, $gpy1V$useContext)((0, $8c8ab388b155237e$export$baf37c4be89255b8));
    let { inputProps: inputProps  } = groupState ? (0, $gpy1V$useCheckboxGroupItem)({
        ...props,
        // Value is optional for standalone checkboxes, but required for CheckboxGroup items;
        // it's passed explicitly here to avoid typescript error (requires ignore).
        // @ts-ignore
        value: props.value,
        // Only pass isRequired and validationState to react-aria if they came from
        // the props for this individual checkbox, and not from the group via context.
        isRequired: originalProps.isRequired,
        validationState: originalProps.validationState
    }, groupState, inputRef) : (0, $gpy1V$useCheckbox)(props, (0, $gpy1V$useToggleState)(props), inputRef);
    let markIcon = isIndeterminate ? /*#__PURE__*/ (0, $gpy1V$react).createElement((0, $gpy1V$spectrumiconsuiDashSmall), {
        UNSAFE_className: (0, $gpy1V$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($fe1a56c62936037c$exports))), "spectrum-Checkbox-partialCheckmark")
    }) : /*#__PURE__*/ (0, $gpy1V$react).createElement((0, $gpy1V$spectrumiconsuiCheckmarkSmall), {
        UNSAFE_className: (0, $gpy1V$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($fe1a56c62936037c$exports))), "spectrum-Checkbox-checkmark")
    });
    if (groupState) {
        for (let key of [
            "isSelected",
            "defaultSelected",
            "isEmphasized"
        ])if (originalProps[key] != null) console.warn(`${key} is unsupported on individual <Checkbox> elements within a <CheckboxGroup>. Please apply these props to the group instead.`);
        if (props.value == null) console.warn("A <Checkbox> element within a <CheckboxGroup> requires a `value` property.");
    }
    return /*#__PURE__*/ (0, $gpy1V$react).createElement("label", {
        ...styleProps,
        ...hoverProps,
        ref: domRef,
        className: (0, $gpy1V$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($fe1a56c62936037c$exports))), "spectrum-Checkbox", {
            "is-checked": inputProps.checked,
            "is-indeterminate": isIndeterminate,
            "spectrum-Checkbox--quiet": !isEmphasized,
            "is-invalid": validationState === "invalid",
            "is-disabled": isDisabled,
            "is-hovered": isHovered
        }, styleProps.className)
    }, /*#__PURE__*/ (0, $gpy1V$react).createElement((0, $gpy1V$FocusRing), {
        focusRingClass: (0, $gpy1V$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($fe1a56c62936037c$exports))), "focus-ring"),
        autoFocus: autoFocus
    }, /*#__PURE__*/ (0, $gpy1V$react).createElement("input", {
        ...inputProps,
        ref: inputRef,
        className: (0, $gpy1V$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($fe1a56c62936037c$exports))), "spectrum-Checkbox-input")
    })), /*#__PURE__*/ (0, $gpy1V$react).createElement("span", {
        className: (0, $gpy1V$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($fe1a56c62936037c$exports))), "spectrum-Checkbox-box")
    }, markIcon), children && /*#__PURE__*/ (0, $gpy1V$react).createElement("span", {
        className: (0, $gpy1V$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($fe1a56c62936037c$exports))), "spectrum-Checkbox-label")
    }, children));
}
/**
 * Checkboxes allow users to select multiple items from a list of individual items,
 * or to mark one individual item as selected.
 */ let $25b6292d81af2844$export$48513f6b9f8ce62d = /*#__PURE__*/ (0, $gpy1V$forwardRef)($25b6292d81af2844$var$Checkbox);


/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 




var $4cb2b26710154c56$exports = {};

$parcel$export($4cb2b26710154c56$exports, "spectrum-FieldGroup", () => $4cb2b26710154c56$export$75eb16cbfc18279c, (v) => $4cb2b26710154c56$export$75eb16cbfc18279c = v);
$parcel$export($4cb2b26710154c56$exports, "spectrum-FieldGroup-group", () => $4cb2b26710154c56$export$984c7bbbfc7ddffc, (v) => $4cb2b26710154c56$export$984c7bbbfc7ddffc = v);
$parcel$export($4cb2b26710154c56$exports, "spectrum-FieldGroup-group--horizontal", () => $4cb2b26710154c56$export$1ad8646bcba21c0e, (v) => $4cb2b26710154c56$export$1ad8646bcba21c0e = v);
var $4cb2b26710154c56$export$75eb16cbfc18279c;
var $4cb2b26710154c56$export$984c7bbbfc7ddffc;
var $4cb2b26710154c56$export$1ad8646bcba21c0e;
$4cb2b26710154c56$export$75eb16cbfc18279c = "spectrum-FieldGroup_41d350";
$4cb2b26710154c56$export$984c7bbbfc7ddffc = "spectrum-FieldGroup-group_41d350";
$4cb2b26710154c56$export$1ad8646bcba21c0e = "spectrum-FieldGroup-group--horizontal_41d350";





function $73f43ce9d441cc69$var$CheckboxGroup(props, ref) {
    props = (0, $gpy1V$useProviderProps)(props);
    props = (0, $gpy1V$useFormProps)(props);
    let { isEmphasized: isEmphasized , children: children , orientation: orientation = "vertical" , validationState: validationState  } = props;
    let domRef = (0, $gpy1V$useDOMRef)(ref);
    let state = (0, $gpy1V$useCheckboxGroupState)(props);
    let { labelProps: labelProps , groupProps: groupProps , descriptionProps: descriptionProps , errorMessageProps: errorMessageProps  } = (0, $gpy1V$useCheckboxGroup)(props, state);
    return /*#__PURE__*/ (0, $gpy1V$react).createElement((0, $gpy1V$Field), {
        ...props,
        ref: domRef,
        wrapperClassName: (0, $gpy1V$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($4cb2b26710154c56$exports))), "spectrum-FieldGroup"),
        labelProps: labelProps,
        descriptionProps: descriptionProps,
        errorMessageProps: errorMessageProps,
        elementType: "span",
        includeNecessityIndicatorInAccessibilityName: true
    }, /*#__PURE__*/ (0, $gpy1V$react).createElement("div", {
        ...groupProps,
        className: (0, $gpy1V$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($4cb2b26710154c56$exports))), "spectrum-FieldGroup-group", {
            "spectrum-FieldGroup-group--horizontal": orientation === "horizontal"
        })
    }, /*#__PURE__*/ (0, $gpy1V$react).createElement((0, $gpy1V$Provider), {
        isEmphasized: isEmphasized,
        validationState: validationState
    }, /*#__PURE__*/ (0, $gpy1V$react).createElement((0, $8c8ab388b155237e$export$baf37c4be89255b8).Provider, {
        value: state
    }, children))));
}
/**
 * A CheckboxGroup allows users to select one or more items from a list of choices.
 */ const $73f43ce9d441cc69$export$4aa08d5625cb8ead = /*#__PURE__*/ (0, $gpy1V$react).forwardRef($73f43ce9d441cc69$var$CheckboxGroup);




export {$25b6292d81af2844$export$48513f6b9f8ce62d as Checkbox, $73f43ce9d441cc69$export$4aa08d5625cb8ead as CheckboxGroup};
//# sourceMappingURL=module.js.map
