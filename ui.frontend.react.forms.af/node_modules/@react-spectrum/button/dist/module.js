import "./main.css";
import {useSlotProps as $d7FTw$useSlotProps, useFocusableRef as $d7FTw$useFocusableRef, useStyleProps as $d7FTw$useStyleProps, useHasChild as $d7FTw$useHasChild, classNames as $d7FTw$classNames, SlotProvider as $d7FTw$SlotProvider} from "@react-spectrum/utils";
import {FocusRing as $d7FTw$FocusRing} from "@react-aria/focus";
import {mergeProps as $d7FTw$mergeProps} from "@react-aria/utils";
import $d7FTw$react from "react";
import {Text as $d7FTw$Text} from "@react-spectrum/text";
import {useButton as $d7FTw$useButton, useToggleButton as $d7FTw$useToggleButton} from "@react-aria/button";
import {useHover as $d7FTw$useHover} from "@react-aria/interactions";
import {useProviderProps as $d7FTw$useProviderProps} from "@react-spectrum/provider";
import $d7FTw$spectrumiconsuiCornerTriangle from "@spectrum-icons/ui/CornerTriangle";
import $d7FTw$spectrumiconsuiCrossSmall from "@spectrum-icons/ui/CrossSmall";
import {useToggleState as $d7FTw$useToggleState} from "@react-stately/toggle";

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ /// <reference types="css-module-types" />
/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 



var $086e93d2352a4536$exports = {};

$parcel$export($086e93d2352a4536$exports, "spectrum-Button", () => $086e93d2352a4536$export$1db4cca5b4ade39a, (v) => $086e93d2352a4536$export$1db4cca5b4ade39a = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-ActionButton", () => $086e93d2352a4536$export$53da69f51b770d3, (v) => $086e93d2352a4536$export$53da69f51b770d3 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-LogicButton", () => $086e93d2352a4536$export$36ae67a131730482, (v) => $086e93d2352a4536$export$36ae67a131730482 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-FieldButton", () => $086e93d2352a4536$export$a024c99ecf6b5741, (v) => $086e93d2352a4536$export$a024c99ecf6b5741 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-ClearButton", () => $086e93d2352a4536$export$b752ce409e5660c, (v) => $086e93d2352a4536$export$b752ce409e5660c = v);
$parcel$export($086e93d2352a4536$exports, "focus-ring", () => $086e93d2352a4536$export$f39a09f249340e2a, (v) => $086e93d2352a4536$export$f39a09f249340e2a = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-FieldButton--quiet", () => $086e93d2352a4536$export$5ca7b274e4fff9fc, (v) => $086e93d2352a4536$export$5ca7b274e4fff9fc = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-Icon", () => $086e93d2352a4536$export$d374b04f30360026, (v) => $086e93d2352a4536$export$d374b04f30360026 = v);
$parcel$export($086e93d2352a4536$exports, "is-hovered", () => $086e93d2352a4536$export$b8813cd5d7824ce7, (v) => $086e93d2352a4536$export$b8813cd5d7824ce7 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-Button-label", () => $086e93d2352a4536$export$c081ba562e204942, (v) => $086e93d2352a4536$export$c081ba562e204942 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-Button--iconOnly", () => $086e93d2352a4536$export$c1d306ec0fae3838, (v) => $086e93d2352a4536$export$c1d306ec0fae3838 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-ActionButton-label", () => $086e93d2352a4536$export$ebb4635c66bacdb9, (v) => $086e93d2352a4536$export$ebb4635c66bacdb9 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-ActionButton-hold", () => $086e93d2352a4536$export$4a4f01c443eff992, (v) => $086e93d2352a4536$export$4a4f01c443eff992 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-ActionButton--quiet", () => $086e93d2352a4536$export$40e1f009544bacf3, (v) => $086e93d2352a4536$export$40e1f009544bacf3 = v);
$parcel$export($086e93d2352a4536$exports, "is-disabled", () => $086e93d2352a4536$export$d35bc1e505d1ebbf, (v) => $086e93d2352a4536$export$d35bc1e505d1ebbf = v);
$parcel$export($086e93d2352a4536$exports, "is-open", () => $086e93d2352a4536$export$a9781837241c946d, (v) => $086e93d2352a4536$export$a9781837241c946d = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-ClearButton--small", () => $086e93d2352a4536$export$49280ffa5236ba8b, (v) => $086e93d2352a4536$export$49280ffa5236ba8b = v);
$parcel$export($086e93d2352a4536$exports, "is-active", () => $086e93d2352a4536$export$20fd0f7cd4e6112f, (v) => $086e93d2352a4536$export$20fd0f7cd4e6112f = v);
$parcel$export($086e93d2352a4536$exports, "is-selected", () => $086e93d2352a4536$export$1e0fb04f31d3c22a, (v) => $086e93d2352a4536$export$1e0fb04f31d3c22a = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-ActionButton--emphasized", () => $086e93d2352a4536$export$5aabb61a966e266f, (v) => $086e93d2352a4536$export$5aabb61a966e266f = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-ActionButton--staticWhite", () => $086e93d2352a4536$export$ccc536e1adbdc059, (v) => $086e93d2352a4536$export$ccc536e1adbdc059 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-ActionButton--staticBlack", () => $086e93d2352a4536$export$8f7c9db66978d20f, (v) => $086e93d2352a4536$export$8f7c9db66978d20f = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-ActionButton--staticColor", () => $086e93d2352a4536$export$29b7b5d6a5a497c5, (v) => $086e93d2352a4536$export$29b7b5d6a5a497c5 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-LogicButton--and", () => $086e93d2352a4536$export$e52daab43a62c528, (v) => $086e93d2352a4536$export$e52daab43a62c528 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-LogicButton--or", () => $086e93d2352a4536$export$da76be6126aaa633, (v) => $086e93d2352a4536$export$da76be6126aaa633 = v);
$parcel$export($086e93d2352a4536$exports, "is-focused", () => $086e93d2352a4536$export$e7dc768d35940237, (v) => $086e93d2352a4536$export$e7dc768d35940237 = v);
$parcel$export($086e93d2352a4536$exports, "is-placeholder", () => $086e93d2352a4536$export$e5b2f5233e4e5194, (v) => $086e93d2352a4536$export$e5b2f5233e4e5194 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-FieldButton--invalid", () => $086e93d2352a4536$export$c9f503f672e8a3c1, (v) => $086e93d2352a4536$export$c9f503f672e8a3c1 = v);
$parcel$export($086e93d2352a4536$exports, "spectrum-Button--overBackground", () => $086e93d2352a4536$export$5cda1128f9112d2e, (v) => $086e93d2352a4536$export$5cda1128f9112d2e = v);
var $086e93d2352a4536$export$1db4cca5b4ade39a;
var $086e93d2352a4536$export$53da69f51b770d3;
var $086e93d2352a4536$export$36ae67a131730482;
var $086e93d2352a4536$export$a024c99ecf6b5741;
var $086e93d2352a4536$export$b752ce409e5660c;
var $086e93d2352a4536$export$f39a09f249340e2a;
var $086e93d2352a4536$export$5ca7b274e4fff9fc;
var $086e93d2352a4536$export$d374b04f30360026;
var $086e93d2352a4536$export$b8813cd5d7824ce7;
var $086e93d2352a4536$export$c081ba562e204942;
var $086e93d2352a4536$export$c1d306ec0fae3838;
var $086e93d2352a4536$export$ebb4635c66bacdb9;
var $086e93d2352a4536$export$4a4f01c443eff992;
var $086e93d2352a4536$export$40e1f009544bacf3;
var $086e93d2352a4536$export$d35bc1e505d1ebbf;
var $086e93d2352a4536$export$a9781837241c946d;
var $086e93d2352a4536$export$49280ffa5236ba8b;
var $086e93d2352a4536$export$20fd0f7cd4e6112f;
var $086e93d2352a4536$export$1e0fb04f31d3c22a;
var $086e93d2352a4536$export$5aabb61a966e266f;
var $086e93d2352a4536$export$ccc536e1adbdc059;
var $086e93d2352a4536$export$8f7c9db66978d20f;
var $086e93d2352a4536$export$29b7b5d6a5a497c5;
var $086e93d2352a4536$export$e52daab43a62c528;
var $086e93d2352a4536$export$da76be6126aaa633;
var $086e93d2352a4536$export$e7dc768d35940237;
var $086e93d2352a4536$export$e5b2f5233e4e5194;
var $086e93d2352a4536$export$c9f503f672e8a3c1;
var $086e93d2352a4536$export$5cda1128f9112d2e;
$086e93d2352a4536$export$1db4cca5b4ade39a = "spectrum-Button_e2d99e";
$086e93d2352a4536$export$53da69f51b770d3 = "spectrum-ActionButton_e2d99e";
$086e93d2352a4536$export$36ae67a131730482 = "spectrum-LogicButton_e2d99e";
$086e93d2352a4536$export$a024c99ecf6b5741 = "spectrum-FieldButton_e2d99e";
$086e93d2352a4536$export$b752ce409e5660c = "spectrum-ClearButton_e2d99e";
$086e93d2352a4536$export$f39a09f249340e2a = "focus-ring_e2d99e";
$086e93d2352a4536$export$5ca7b274e4fff9fc = "spectrum-FieldButton--quiet_e2d99e";
$086e93d2352a4536$export$d374b04f30360026 = "spectrum-Icon_e2d99e";
$086e93d2352a4536$export$b8813cd5d7824ce7 = "is-hovered_e2d99e";
$086e93d2352a4536$export$c081ba562e204942 = "spectrum-Button-label_e2d99e";
$086e93d2352a4536$export$c1d306ec0fae3838 = "spectrum-Button--iconOnly_e2d99e";
$086e93d2352a4536$export$ebb4635c66bacdb9 = "spectrum-ActionButton-label_e2d99e";
$086e93d2352a4536$export$4a4f01c443eff992 = "spectrum-ActionButton-hold_e2d99e";
$086e93d2352a4536$export$40e1f009544bacf3 = "spectrum-ActionButton--quiet_e2d99e";
$086e93d2352a4536$export$d35bc1e505d1ebbf = "is-disabled_e2d99e";
$086e93d2352a4536$export$a9781837241c946d = "is-open_e2d99e";
$086e93d2352a4536$export$49280ffa5236ba8b = "spectrum-ClearButton--small_e2d99e";
$086e93d2352a4536$export$20fd0f7cd4e6112f = "is-active_e2d99e";
$086e93d2352a4536$export$1e0fb04f31d3c22a = "is-selected_e2d99e";
$086e93d2352a4536$export$5aabb61a966e266f = "spectrum-ActionButton--emphasized_e2d99e";
$086e93d2352a4536$export$ccc536e1adbdc059 = "spectrum-ActionButton--staticWhite_e2d99e";
$086e93d2352a4536$export$8f7c9db66978d20f = "spectrum-ActionButton--staticBlack_e2d99e";
$086e93d2352a4536$export$29b7b5d6a5a497c5 = "spectrum-ActionButton--staticColor_e2d99e";
$086e93d2352a4536$export$e52daab43a62c528 = "spectrum-LogicButton--and_e2d99e";
$086e93d2352a4536$export$da76be6126aaa633 = "spectrum-LogicButton--or_e2d99e";
$086e93d2352a4536$export$e7dc768d35940237 = "is-focused_e2d99e";
$086e93d2352a4536$export$e5b2f5233e4e5194 = "is-placeholder_e2d99e";
$086e93d2352a4536$export$c9f503f672e8a3c1 = "spectrum-FieldButton--invalid_e2d99e";
$086e93d2352a4536$export$5cda1128f9112d2e = "spectrum-Button--overBackground_e2d99e";






function $b865a6f0049e2d66$var$Button(props, ref) {
    props = (0, $d7FTw$useProviderProps)(props);
    props = (0, $d7FTw$useSlotProps)(props, "button");
    let { elementType: ElementType = "button" , children: children , variant: variant , style: style = variant === "accent" || variant === "cta" ? "fill" : "outline" , staticColor: staticColor , isDisabled: isDisabled , autoFocus: autoFocus , ...otherProps } = props;
    let domRef = (0, $d7FTw$useFocusableRef)(ref);
    let { buttonProps: buttonProps , isPressed: isPressed  } = (0, $d7FTw$useButton)(props, domRef);
    let { hoverProps: hoverProps , isHovered: isHovered  } = (0, $d7FTw$useHover)({
        isDisabled: isDisabled
    });
    let { styleProps: styleProps  } = (0, $d7FTw$useStyleProps)(otherProps);
    let hasLabel = (0, $d7FTw$useHasChild)(`.${(0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports)))["spectrum-Button-label"]}`, domRef);
    let hasIcon = (0, $d7FTw$useHasChild)(`.${(0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports)))["spectrum-Icon"]}`, domRef);
    if (variant === "cta") variant = "accent";
    else if (variant === "overBackground") {
        variant = "primary";
        staticColor = "white";
    }
    return /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$FocusRing), {
        focusRingClass: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "focus-ring"),
        autoFocus: autoFocus
    }, /*#__PURE__*/ (0, $d7FTw$react).createElement(ElementType, {
        ...styleProps,
        ...(0, $d7FTw$mergeProps)(buttonProps, hoverProps),
        ref: domRef,
        "data-variant": variant,
        "data-style": style,
        "data-static-color": staticColor || undefined,
        className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-Button", {
            "spectrum-Button--iconOnly": hasIcon && !hasLabel,
            "is-disabled": isDisabled,
            "is-active": isPressed,
            "is-hovered": isHovered
        }, styleProps.className)
    }, /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$SlotProvider), {
        slots: {
            icon: {
                size: "S",
                UNSAFE_className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-Icon")
            },
            text: {
                UNSAFE_className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-Button-label")
            }
        }
    }, typeof children === "string" ? /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$Text), null, children) : children)));
}
/**
 * Buttons allow users to perform an action or to navigate to another page.
 * They have multiple styles for various needs, and are ideal for calling attention to
 * where a user needs to do something in order to move forward in a flow.
 */ let $b865a6f0049e2d66$export$353f5b6fc5456de1 = /*#__PURE__*/ (0, $d7FTw$react).forwardRef($b865a6f0049e2d66$var$Button);


/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 









function $042ad0b3a4a55b33$var$ActionButton(props, ref) {
    props = (0, $d7FTw$useProviderProps)(props);
    props = (0, $d7FTw$useSlotProps)(props, "actionButton");
    let { isQuiet: isQuiet , isDisabled: isDisabled , staticColor: staticColor , children: children , autoFocus: autoFocus , holdAffordance: // @ts-ignore (private)
    holdAffordance , ...otherProps } = props;
    let domRef = (0, $d7FTw$useFocusableRef)(ref);
    let { buttonProps: buttonProps , isPressed: isPressed  } = (0, $d7FTw$useButton)(props, domRef);
    let { hoverProps: hoverProps , isHovered: isHovered  } = (0, $d7FTw$useHover)({
        isDisabled: isDisabled
    });
    let { styleProps: styleProps  } = (0, $d7FTw$useStyleProps)(otherProps);
    let isTextOnly = (0, $d7FTw$react).Children.toArray(props.children).every((c)=>!/*#__PURE__*/ (0, $d7FTw$react).isValidElement(c));
    return /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$FocusRing), {
        focusRingClass: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "focus-ring"),
        autoFocus: autoFocus
    }, /*#__PURE__*/ (0, $d7FTw$react).createElement("button", {
        ...styleProps,
        ...(0, $d7FTw$mergeProps)(buttonProps, hoverProps),
        ref: domRef,
        className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-ActionButton", {
            "spectrum-ActionButton--quiet": isQuiet,
            "spectrum-ActionButton--staticColor": !!staticColor,
            "spectrum-ActionButton--staticWhite": staticColor === "white",
            "spectrum-ActionButton--staticBlack": staticColor === "black",
            "is-active": isPressed,
            "is-disabled": isDisabled,
            "is-hovered": isHovered
        }, styleProps.className)
    }, holdAffordance && /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$spectrumiconsuiCornerTriangle), {
        UNSAFE_className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-ActionButton-hold")
    }), /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$SlotProvider), {
        slots: {
            icon: {
                size: "S",
                UNSAFE_className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-Icon")
            },
            text: {
                UNSAFE_className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-ActionButton-label")
            }
        }
    }, typeof children === "string" || isTextOnly ? /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$Text), null, children) : children)));
}
/**
 * ActionButtons allow users to perform an action.
 * They’re used for similar, task-based options within a workflow, and are ideal for interfaces where buttons aren’t meant to draw a lot of attention.
 */ let $042ad0b3a4a55b33$export$cfc7921d29ef7b80 = /*#__PURE__*/ (0, $d7FTw$react).forwardRef($042ad0b3a4a55b33$var$ActionButton);


/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 






// @private
function $b43bd559b476d0c4$var$FieldButton(props, ref) {
    props = (0, $d7FTw$useSlotProps)(props, "button");
    let { isQuiet: isQuiet , isDisabled: isDisabled , validationState: validationState , children: children , autoFocus: autoFocus , isActive: isActive , focusRingClass: focusRingClass , ...otherProps } = props;
    let domRef = (0, $d7FTw$useFocusableRef)(ref);
    let { buttonProps: buttonProps , isPressed: isPressed  } = (0, $d7FTw$useButton)(props, domRef);
    let { hoverProps: hoverProps , isHovered: isHovered  } = (0, $d7FTw$useHover)({
        isDisabled: isDisabled
    });
    let { styleProps: styleProps  } = (0, $d7FTw$useStyleProps)(otherProps);
    return /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$FocusRing), {
        focusRingClass: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "focus-ring", focusRingClass),
        autoFocus: autoFocus
    }, /*#__PURE__*/ (0, $d7FTw$react).createElement("button", {
        ...(0, $d7FTw$mergeProps)(buttonProps, hoverProps),
        ref: domRef,
        className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-FieldButton", {
            "spectrum-FieldButton--quiet": isQuiet,
            "is-active": isActive || isPressed,
            "is-disabled": isDisabled,
            "spectrum-FieldButton--invalid": validationState === "invalid",
            "is-hovered": isHovered
        }, styleProps.className)
    }, /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$SlotProvider), {
        slots: {
            icon: {
                size: "S",
                UNSAFE_className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-Icon")
            }
        }
    }, children)));
}
let $b43bd559b476d0c4$export$47dc48f595b075da = /*#__PURE__*/ (0, $d7FTw$react).forwardRef($b43bd559b476d0c4$var$FieldButton);


/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 







function $45108e3c482ee88b$var$LogicButton(props, ref) {
    props = (0, $d7FTw$useProviderProps)(props);
    let { variant: variant , children: children , isDisabled: isDisabled , autoFocus: autoFocus , ...otherProps } = props;
    let domRef = (0, $d7FTw$useFocusableRef)(ref);
    let { buttonProps: buttonProps , isPressed: isPressed  } = (0, $d7FTw$useButton)(props, domRef);
    let { hoverProps: hoverProps , isHovered: isHovered  } = (0, $d7FTw$useHover)({
        isDisabled: isDisabled
    });
    let { styleProps: styleProps  } = (0, $d7FTw$useStyleProps)(otherProps);
    return /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$FocusRing), {
        focusRingClass: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "focus-ring"),
        autoFocus: autoFocus
    }, /*#__PURE__*/ (0, $d7FTw$react).createElement("button", {
        ...styleProps,
        ...(0, $d7FTw$mergeProps)(buttonProps, hoverProps),
        ref: domRef,
        className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-LogicButton", {
            [`spectrum-LogicButton--${variant}`]: variant,
            "is-disabled": isDisabled,
            "is-active": isPressed,
            "is-hovered": isHovered
        }, styleProps.className)
    }, /*#__PURE__*/ (0, $d7FTw$react).createElement("span", {
        className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-Button-label")
    }, children)));
}
/**
 * A LogicButton displays an operator within a boolean logic sequence.
 */ let $45108e3c482ee88b$export$9b0b80fed00ba8b1 = /*#__PURE__*/ (0, $d7FTw$react).forwardRef($45108e3c482ee88b$var$LogicButton);


/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 







function $dd24e555a16de2ae$var$ClearButton(props, ref) {
    let { children: children = /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$spectrumiconsuiCrossSmall), {
        UNSAFE_className: (0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports)))["spectrum-Icon"]
    }) , focusClassName: focusClassName , variant: variant , autoFocus: autoFocus , isDisabled: isDisabled , preventFocus: preventFocus , elementType: elementType = preventFocus ? "div" : "button" , ...otherProps } = props;
    let domRef = (0, $d7FTw$useFocusableRef)(ref);
    let { buttonProps: buttonProps , isPressed: isPressed  } = (0, $d7FTw$useButton)({
        ...props,
        elementType: elementType
    }, domRef);
    let { hoverProps: hoverProps , isHovered: isHovered  } = (0, $d7FTw$useHover)({
        isDisabled: isDisabled
    });
    let { styleProps: styleProps  } = (0, $d7FTw$useStyleProps)(otherProps);
    // For cases like the clear button in a search field, remove the tabIndex so
    // iOS 14 with VoiceOver doesn't focus the button and hide the keyboard when
    // moving the cursor over the clear button.
    if (preventFocus) delete buttonProps.tabIndex;
    let ElementType = elementType;
    return /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$FocusRing), {
        focusRingClass: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "focus-ring", focusClassName),
        autoFocus: autoFocus
    }, /*#__PURE__*/ (0, $d7FTw$react).createElement(ElementType, {
        ...styleProps,
        ...(0, $d7FTw$mergeProps)(buttonProps, hoverProps),
        ref: domRef,
        className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-ClearButton", {
            [`spectrum-ClearButton--${variant}`]: variant,
            "is-disabled": isDisabled,
            "is-active": isPressed,
            "is-hovered": isHovered
        }, styleProps.className)
    }, children));
}
let $dd24e555a16de2ae$export$13ec83e50bf04290 = /*#__PURE__*/ (0, $d7FTw$react).forwardRef($dd24e555a16de2ae$var$ClearButton);


/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 









function $3979c7c23b0bd270$var$ToggleButton(props, ref) {
    props = (0, $d7FTw$useProviderProps)(props);
    let { isQuiet: isQuiet , isDisabled: isDisabled , isEmphasized: isEmphasized , staticColor: staticColor , children: children , autoFocus: autoFocus , ...otherProps } = props;
    let domRef = (0, $d7FTw$useFocusableRef)(ref);
    let state = (0, $d7FTw$useToggleState)(props);
    let { buttonProps: buttonProps , isPressed: isPressed  } = (0, $d7FTw$useToggleButton)(props, state, domRef);
    let { hoverProps: hoverProps , isHovered: isHovered  } = (0, $d7FTw$useHover)({
        isDisabled: isDisabled
    });
    let { styleProps: styleProps  } = (0, $d7FTw$useStyleProps)(otherProps);
    let isTextOnly = (0, $d7FTw$react).Children.toArray(props.children).every((c)=>!/*#__PURE__*/ (0, $d7FTw$react).isValidElement(c));
    return /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$FocusRing), {
        focusRingClass: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "focus-ring"),
        autoFocus: autoFocus
    }, /*#__PURE__*/ (0, $d7FTw$react).createElement("button", {
        ...styleProps,
        ...(0, $d7FTw$mergeProps)(buttonProps, hoverProps),
        ref: domRef,
        className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-ActionButton", {
            "spectrum-ActionButton--quiet": isQuiet,
            "spectrum-ActionButton--emphasized": isEmphasized,
            "spectrum-ActionButton--staticColor": !!staticColor,
            "spectrum-ActionButton--staticWhite": staticColor === "white",
            "spectrum-ActionButton--staticBlack": staticColor === "black",
            "is-active": isPressed,
            "is-disabled": isDisabled,
            "is-hovered": isHovered,
            "is-selected": state.isSelected
        }, styleProps.className)
    }, /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$SlotProvider), {
        slots: {
            icon: {
                size: "S",
                UNSAFE_className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-Icon")
            },
            text: {
                UNSAFE_className: (0, $d7FTw$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($086e93d2352a4536$exports))), "spectrum-ActionButton-label")
            }
        }
    }, typeof children === "string" || isTextOnly ? /*#__PURE__*/ (0, $d7FTw$react).createElement((0, $d7FTw$Text), null, children) : children)));
}
/**
 * ToggleButtons allow users to toggle a selection on or off, for example
 * switching between two states or modes.
 */ let $3979c7c23b0bd270$export$d2b052e7b4be1756 = /*#__PURE__*/ (0, $d7FTw$react).forwardRef($3979c7c23b0bd270$var$ToggleButton);




export {$b865a6f0049e2d66$export$353f5b6fc5456de1 as Button, $042ad0b3a4a55b33$export$cfc7921d29ef7b80 as ActionButton, $b43bd559b476d0c4$export$47dc48f595b075da as FieldButton, $45108e3c482ee88b$export$9b0b80fed00ba8b1 as LogicButton, $dd24e555a16de2ae$export$13ec83e50bf04290 as ClearButton, $3979c7c23b0bd270$export$d2b052e7b4be1756 as ToggleButton};
//# sourceMappingURL=module.js.map
