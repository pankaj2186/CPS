/*************************************************************************
 * Copyright 2022 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
/**
 * A feature flag object.
 */
export interface FlattenedFeatureFlag {
    [name: string]: string;
}
/**
 * The response from the featureflags service.
 */
export interface FeatureFlagsResponse {
    [projectId: string]: FlattenedFeatureFlag;
}
/**
 * The input parameters for the feature flags API.
 * This should be a list of LaunchDarkly project ids to get.
 * You'll find a list of allowed projectIds in the
 * documentation site:
 * https://git.corp.adobe.com/pages/exc/unified-shell-docs/docs/intro
 */
export declare type ProjectIds = string[];
/**
 * APIs to get featureFlags.
 */
export interface FeatureFlagsApi {
    /**
     * Gets feature flags by array of projectIds or ['*']
     * You'll find a list of allowed projectIds in the
     * documentation site:
     * https://git.corp.adobe.com/pages/exc/unified-shell-docs/docs/intro
     * @param params ProjectIds used to identify feature flags to retrieve.
     * @returns A promise for the feature flags.
     */
    get(params?: ProjectIds): Promise<FeatureFlagsResponse>;
}
declare const featureFlags: FeatureFlagsApi;
export default featureFlags;
