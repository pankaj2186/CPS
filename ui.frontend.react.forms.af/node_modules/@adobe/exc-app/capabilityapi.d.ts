/*************************************************************************
 * Copyright 2021 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
export interface CapabilityResponse {
    /**
     * Unique key to identify the capability.
     */
    capabilityId: string;
    /**
     * A URL to fetch the capability's icon.
     */
    iconUrl: string;
}
export declare enum CapabilityNames {
    ACCOUNTPROFILE = "Profiles",
    ACCOUNTSEGMENTS = "Segments",
    ADMIN = "Configurations",
    ALERT = "Alerts",
    APPCONFIGURATIONS = "App Configurations",
    APPLICATIONS = "Applications",
    APPSURFACES = "App Surfaces",
    ASSETS = "Assets",
    ASSURANCE = "Assurance",
    CAMPAIGNS = "Campaigns",
    CLIENTPROPERTIES = "Tags",
    COMPONENTS = "Components",
    CONTENTTEMPLATES = "Content Templates",
    CONTROLRULES = "Rules",
    DASHBOARD = "Dashboards",
    DATACLEANSING = "Data Hygiene",
    DATACOLLECTIONMONITORING = "Monitoring",
    DATAFLOW = "Dataflows",
    DATASET = "Datasets",
    DATASTREAMS = "Datastreams",
    DATASTREAMSBETA = "Datastreams (Beta)",
    DESTINATION = "Destinations",
    FRAGMENTS = "Fragments",
    HOME = "Home",
    IDENTITIES = "Identities",
    IDENTITY = "Identities",
    INITIATIVES = "Initiatives",
    JOURNEYS = "Journeys",
    LANDINGPAGES = "Landing pages",
    LICENSEUSAGE = "License Usage",
    MESSAGES = "Messages",
    MODEL = "Models",
    MONITORING = "Monitoring",
    NOTEBOOK = "Notebooks",
    OFFER = "Offers",
    OFFERACTIVITY = "Components",
    PERMISSIONSUI = "Permissions",
    PLACES = "Places",
    PLAYBOOKS = "Playbooks",
    POLICY = "Policies",
    PRIVACYAUDIT = "Audits",
    PRIVACYCONSOLE = "Privacy Console",
    PROFILE = "Profiles",
    QUERY = "Queries",
    REQUEST = "Requests",
    SANDBOX = "Sandboxes",
    SCHEMA = "Schemas",
    SEGMENT = "Segments",
    SERVERPROPERTIES = "Event Forwarding",
    SERVICE = "Services",
    SETTINGS = "Channels",
    SOURCE = "Sources",
    SUBSCRIPTIONS = "Subscription list",
    UNIFIEDTAGS = "UnifiedTags",
    WORKFLOW = "Workflows"
}
export declare enum CapabilityIds {
    ACCOUNTPROFILE = "accountProfile",
    ACCOUNTSEGMENTS = "accountSegments",
    ADMIN = "admin",
    ALERT = "alert",
    APPCONFIGURATIONS = "appconfigurations",
    APPLICATIONS = "applications",
    APPSURFACES = "appsurfaces",
    ASSETS = "assets",
    ASSURANCE = "assurance",
    CAMPAIGNS = "campaigns",
    CLIENTPROPERTIES = "clientproperties",
    COMPONENTS = "components",
    CONTENTTEMPLATES = "contentTemplates",
    CONTROLRULES = "controlRules",
    DASHBOARD = "dashboard",
    DATACLEANSING = "dataCleansing",
    DATACOLLECTIONMONITORING = "datacollectionmonitoring",
    DATAFLOW = "dataflow",
    DATASET = "dataset",
    DATASTREAMS = "datastreams",
    DATASTREAMSBETA = "datastreamsbeta",
    DESTINATION = "destination",
    FRAGMENTS = "fragments",
    HOME = "home",
    IDENTITIES = "identities",
    IDENTITY = "identity",
    INITIATIVES = "initiatives",
    JOURNEYS = "journeys",
    LANDINGPAGES = "landingPages",
    LICENSEUSAGE = "licenseUsage",
    MESSAGES = "messages",
    MODEL = "model",
    MONITORING = "monitoring",
    NOTEBOOK = "notebook",
    OFFER = "offer",
    OFFERACTIVITY = "offeractivity",
    PERMISSIONSUI = "permissionsUI",
    PLACES = "places",
    PLAYBOOKS = "playbooks",
    POLICY = "policy",
    PRIVACYAUDIT = "privacyAudit",
    PRIVACYCONSOLE = "privacyConsole",
    PROFILE = "profile",
    QUERY = "query",
    REQUEST = "request",
    SANDBOX = "sandbox",
    SCHEMA = "schema",
    SEGMENT = "segment",
    SERVERPROPERTIES = "serverproperties",
    SERVICE = "service",
    SETTINGS = "settings",
    SOURCE = "source",
    SUBSCRIPTIONS = "subscriptions",
    UNIFIEDTAGS = "unifiedTags",
    WORKFLOW = "workflow"
}
export interface CapabilityApi {
    /**
     * Gets the specified icon.
     * @param icon The name of the capability, solution, or other to get an icon for.
     */
    get(capability: CapabilityNames | CapabilityIds): Promise<CapabilityResponse>;
}
declare const capabilityapi: CapabilityApi;
export default capabilityapi;
